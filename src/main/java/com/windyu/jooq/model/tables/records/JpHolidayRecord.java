/*
 * This file is generated by jOOQ.
 */
package com.windyu.jooq.model.tables.records;


import com.windyu.jooq.model.tables.JpHoliday;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JpHolidayRecord extends UpdatableRecordImpl<JpHolidayRecord> implements Record2<LocalDate, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.jp_holiday.hol_date</code>.
     */
    public void setHolDate(LocalDate value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.jp_holiday.hol_date</code>.
     */
    public LocalDate getHolDate() {
        return (LocalDate) get(0);
    }

    /**
     * Setter for <code>public.jp_holiday.hol_name</code>.
     */
    public void setHolName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.jp_holiday.hol_name</code>.
     */
    public String getHolName() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<LocalDate> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<LocalDate, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<LocalDate, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<LocalDate> field1() {
        return JpHoliday.JP_HOLIDAY.HOL_DATE;
    }

    @Override
    public Field<String> field2() {
        return JpHoliday.JP_HOLIDAY.HOL_NAME;
    }

    @Override
    public LocalDate component1() {
        return getHolDate();
    }

    @Override
    public String component2() {
        return getHolName();
    }

    @Override
    public LocalDate value1() {
        return getHolDate();
    }

    @Override
    public String value2() {
        return getHolName();
    }

    @Override
    public JpHolidayRecord value1(LocalDate value) {
        setHolDate(value);
        return this;
    }

    @Override
    public JpHolidayRecord value2(String value) {
        setHolName(value);
        return this;
    }

    @Override
    public JpHolidayRecord values(LocalDate value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JpHolidayRecord
     */
    public JpHolidayRecord() {
        super(JpHoliday.JP_HOLIDAY);
    }

    /**
     * Create a detached, initialised JpHolidayRecord
     */
    public JpHolidayRecord(LocalDate holDate, String holName) {
        super(JpHoliday.JP_HOLIDAY);

        setHolDate(holDate);
        setHolName(holName);
        resetChangedOnNotNull();
    }
}
